name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger the pipeline on push to the master branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the latest code from the repo
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up AWS credentials
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Specify your AWS region here

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true
          registry-type: private
          skip-logout: false

      # Step 4: Build and Push Docker images to ECR
      - name: Build and Push Docker images to ECR
        run: |
          docker buildx build \
            --file ./microservices-project/user-service/Dockerfile \
            --tag 717279687729.dkr.ecr.us-east-1.amazonaws.com/user-service:latest \
            --push \
            ./microservices-project/user-service

          docker buildx build \
            --file ./microservices-project/order-service/Dockerfile \
            --tag 717279687729.dkr.ecr.us-east-1.amazonaws.com/order-service:latest \
            --push \
            ./microservices-project/order-service

          docker buildx build \
            --file ./microservices-project/payment-service/Dockerfile \
            --tag 717279687729.dkr.ecr.us-east-1.amazonaws.com/payment-service:latest \
            --push \
            ./microservices-project/payment-service

      # Step 5: Set up kubectl for EKS
      - name: Set up kubectl for EKS
        run: |
          aws eks --region us-east-1 update-kubeconfig --name microservices-cluster

      # Step 6: Deploy to EKS using kubectl
      - name: Deploy using kubectl
        run: |
          kubectl apply -f k8s/user-deployment.yaml
          kubectl apply -f k8s/order-deployment.yaml
          kubectl apply -f k8s/payment-deployment.yaml
